from utee import misc
print = misc.logger.info
import torch.nn as nn
from modules.quantization_cpu_np_infer import QConv2d,  QLinear
from modules.floatrange_cpu_np_infer import FConv2d, FLinear
import torch

class VGG(nn.Module):
    def __init__(self, args, features, num_classes,logger):
        super(VGG, self).__init__()
        assert isinstance(features, nn.Sequential), type(features)
        self.features = features
        # self.avgpool = nn.AdaptiveAvgPool2d((4, 2))
        # self.classifier = make_layers([('L', 2048, 4096),
        #                                ('L', 4096, 4096),
        #                                ('L', 4096, num_classes)],
        #                                args, logger)
        # self.avgpool = nn.AvgPool2d(kernel_size=2, stride=1)
        # self.classifier = make_layers([('L', 512, num_classes)],
        #                                args, logger)[0]
        # print(self.features)
        # print(self.classifier)

    def forward(self, x):
        f_size = int(x.size()[-1])
        for i in self.features:
            if isinstance(i, nn.MaxPool2d):
                f_size = int(f_size/2)
            if isinstance(i, QConv2d) == True:
                x = torch.rand(size=[2, i.in_channels, f_size, f_size]).cuda()
                print(x.size())
                x = i(x)
            else:
                x = i(x)

                # x = self.features[3 * i + 2](self.features[3 * i + 1](self.features[3 * i](x)))
            # if isinstance(self.features[3*i],QConv2d) == True:
            #
            #     x = torch.rand(size=[16, self.features[3*i].in_channels,32,32]).cuda()
            #     print(x.size())
            #     x = self.features[3*i+2](self.features[3*i+1](self.features[3*i](x)))

        # x = self.features[2](self.features[4](self.features[3](x)))
        # x = self.avgpool(x)
        # x = x.view(x.size(0), -1)
        # x = self.classifier(x)
        return x


def make_layers(cfg, args, logger ):
    layers = []
    # in_channels = 512
    for i, v in enumerate(cfg):
        if v[0] == 'M':
            layers += [nn.MaxPool2d(kernel_size=v[1], stride=v[2])]
        if v[0] == 'C':
            in_channels = v[1]
            out_channels = v[2]
            if v[4] == 'same':
                padding = v[3]//2
            else:
                padding = 0
            if args.mode == "WAGE":
                conv2d = QConv2d(in_channels, out_channels, kernel_size=v[3], padding=padding,
                                 logger=logger,wl_input = args.wl_activate,wl_activate=args.wl_activate,
                                 wl_error=args.wl_error,wl_weight= args.wl_weight,inference=args.inference,onoffratio=args.onoffratio,cellBit=args.cellBit,
                                 subArray=args.subArray,ADCprecision=args.ADCprecision,vari=args.vari,t=args.t,v=args.v,detect=args.detect,target=args.target,
                                 name = 'Conv'+str(i)+'_', model = args.model)
            elif args.mode == "FP":
                conv2d = FConv2d(in_channels, out_channels, kernel_size=v[3], padding=padding,
                                 logger=logger,wl_input = args.wl_activate,wl_weight= args.wl_weight,inference=args.inference,onoffratio=args.onoffratio,cellBit=args.cellBit,
                                 subArray=args.subArray,ADCprecision=args.ADCprecision,vari=args.vari,t=args.t,v=args.v,detect=args.detect,target=args.target,
                                 name = 'Conv'+str(i)+'_' )
            bnorm = torch.nn.BatchNorm2d(out_channels)
            non_linearity_activation =  nn.ReLU()
            layers += [conv2d, bnorm, non_linearity_activation]
            in_channels = out_channels
        if v[0] == 'L':
            if args.mode == "WAGE":
                linear = QLinear(in_features=v[1], out_features=v[2],
                                logger=logger, wl_input = args.wl_activate,wl_activate=args.wl_activate,wl_error=args.wl_error,
                                wl_weight=args.wl_weight,inference=args.inference,onoffratio=args.onoffratio,cellBit=args.cellBit,
                                subArray=args.subArray,ADCprecision=args.ADCprecision,vari=args.vari,t=args.t,v=args.v,detect=args.detect,target=args.target,
                                name='FC'+str(i)+'_', model = args.model)
            elif args.mode == "FP":
                linear = FLinear(in_features=v[1], out_features=v[2],
                                 logger=logger,wl_input = args.wl_activate,wl_weight= args.wl_weight,inference=args.inference,onoffratio=args.onoffratio,cellBit=args.cellBit,
                                 subArray=args.subArray,ADCprecision=args.ADCprecision,vari=args.vari,t=args.t,v=args.v,detect=args.detect,target=args.target,
                                 name='FC'+str(i)+'_')
            bnorm = torch.nn.BatchNorm1d(v[2])
            if i < len(cfg)-1:
                non_linearity_activation =  nn.ReLU()
                layers += [linear, bnorm, non_linearity_activation]
            else:
                layers += [linear]
    return nn.Sequential(*layers)



cfg_list = {
    'vgg8': [('C', 128, 3, 'same', 2.0),
                ('C', 128, 3, 'same', 16.0),
                ('M', 2, 2),
                ('C', 256, 3, 'same', 16.0),
                ('C', 256, 3, 'same', 16.0),
                ('M', 2, 2),
                ('C', 512, 3, 'same', 16.0),
                ('C', 512, 3, 'same', 32.0),
                ('M', 2, 2)],

    'vgg16': [('C', 64, 3, 'same', 2.0),
                ('C', 64, 3, 'same', 16.0),
                ('M', 2, 2),
                ('C', 128, 3, 'same', 16.0),
                ('C', 128, 3, 'same', 16.0),
                ('M', 2, 2),
                ('C', 256, 3, 'same', 16.0),
                ('C', 256, 3, 'same', 32.0),
                ('C', 256, 3, 'same', 32.0),
                ('M', 2, 2),
                ('C', 512, 3, 'same', 16.0),
                ('C', 512, 3, 'same', 32.0),
                ('C', 512, 3, 'same', 32.0),
                ('M', 2, 2),
                ('C', 512, 3, 'same', 16.0),
                ('C', 512, 3, 'same', 32.0),
                ('C', 512, 3, 'same', 32.0)
              ],

    'VGG16' : [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8),
               ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2),
               ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8),
               ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2),
               ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8),
               ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8),
               ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2),
               ('C', 256, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8),
               ('C', 512, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8),
               ('C', 512, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2),
               ('C', 512, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8),
               ('C', 512, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8),
               ('C', 512, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],

    'VGG11' : [('C', 64, 3, 'same', 8), ('M', 2, 2),('C', 128, 3, 'same', 8), ('M', 2, 2), ('C', 256, 3, 'same', 8), ('C', 256, 3, 'same', 8), ('M', 2, 2), ('C', 512, 3, 'same', 8), ('C', 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 3, 'same', 8), ('C', 512, 3, 'same', 8)],
    'Custom_lat_gen': [('C', 512, 256, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8)],

    '20_1': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '20_2': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],
    '20_3': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '20_4': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '20_5': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '20_7': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    '30_1': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '30_2': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '30_3': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '30_4': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '30_5': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '30_6': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],


    '40_1': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '40_2': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '40_3': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '40_4': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '40_5': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '40_6': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    '50_1': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '50_2': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '50_3': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],
    '50_4': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '50_5': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    '60_1': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '60_2': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '60_3': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '60_4': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '60_5': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '60_6': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],

    '70_1': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '70_2': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '70_3': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '70_4': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '70_5': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    '80_1': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '80_2': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '80_3': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '80_4': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],
    '80_5': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '80_6': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '80_7': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    '90_1': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '90_2': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '90_3': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '90_4': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '90_5': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    '100_1': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '100_2': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '100_3': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],
    '100_4': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '100_5': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    '110_1': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '110_2': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '110_3': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    '110_4': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    ###########################################################

    'L_20_1': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_30_1': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_40_1': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],
    'L_50_1': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_60_1': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_70_1': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_80_1': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_80_2': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],
    'L_90_1': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_100_1': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_110_1': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'L_120_1': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],


    ## ABLATIION DESGIN SPACE
    'C_20': [('C', 3, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'C_40': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'C_60': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'C_80': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'C_100': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    'C_A_20': [('C', 3, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'C_A_40': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'C_A_60': [('C', 3, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8)],
    'C_A_80': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
    'C_A_100': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 64, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],

    'vgg16_12': [('C', 3, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 64, 64, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 64, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 128, 128, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 128, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 256, 256, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 256, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('M', 2, 2), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8), ('C', 512, 512, 3, 'same', 8), ('C', 64, 512, 3, 'same', 8)],
}

def vgg8( args, logger, pretrained=None):
    print('area lim model used')
    cfg = cfg_list['L_60_1']
    layers = make_layers(cfg, args, logger)
    model = VGG(args,layers, num_classes=10,logger = logger)
    if pretrained is not None:
        model.load_state_dict(torch.load(pretrained))
    return model


